// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/tfprof_log.proto

#ifndef PROTOBUF_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto__INCLUDED
#define PROTOBUF_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/core/framework/attr_value.pb.h"
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace tfprof {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
void protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

class CodeDef;
class CodeDef_Trace;
class ExecProfile;
class ExecTime;
class Memory;
class OpLogEntry;
class OpLogProto;
class ProfileNode;
class ProfileProto;
class Tuple;

// ===================================================================

class CodeDef_Trace : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.CodeDef.Trace) */ {
 public:
  CodeDef_Trace();
  virtual ~CodeDef_Trace();

  CodeDef_Trace(const CodeDef_Trace& from);

  inline CodeDef_Trace& operator=(const CodeDef_Trace& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CodeDef_Trace& default_instance();

  static const CodeDef_Trace* internal_default_instance();

  void Swap(CodeDef_Trace* other);

  // implements Message ----------------------------------------------

  inline CodeDef_Trace* New() const { return New(NULL); }

  CodeDef_Trace* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CodeDef_Trace& from);
  void MergeFrom(const CodeDef_Trace& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CodeDef_Trace* other);
  void UnsafeMergeFrom(const CodeDef_Trace& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // optional int32 lineno = 2;
  void clear_lineno();
  static const int kLinenoFieldNumber = 2;
  ::google::protobuf::int32 lineno() const;
  void set_lineno(::google::protobuf::int32 value);

  // optional string function = 3;
  void clear_function();
  static const int kFunctionFieldNumber = 3;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // optional string line = 4;
  void clear_line();
  static const int kLineFieldNumber = 4;
  const ::std::string& line() const;
  void set_line(const ::std::string& value);
  void set_line(const char* value);
  void set_line(const char* value, size_t size);
  ::std::string* mutable_line();
  ::std::string* release_line();
  void set_allocated_line(::std::string* line);

  // optional int32 func_start_line = 5;
  void clear_func_start_line();
  static const int kFuncStartLineFieldNumber = 5;
  ::google::protobuf::int32 func_start_line() const;
  void set_func_start_line(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.CodeDef.Trace)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  ::google::protobuf::internal::ArenaStringPtr line_;
  ::google::protobuf::int32 lineno_;
  ::google::protobuf::int32 func_start_line_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CodeDef_Trace> CodeDef_Trace_default_instance_;

// -------------------------------------------------------------------

class CodeDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.CodeDef) */ {
 public:
  CodeDef();
  virtual ~CodeDef();

  CodeDef(const CodeDef& from);

  inline CodeDef& operator=(const CodeDef& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CodeDef& default_instance();

  static const CodeDef* internal_default_instance();

  void Swap(CodeDef* other);

  // implements Message ----------------------------------------------

  inline CodeDef* New() const { return New(NULL); }

  CodeDef* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CodeDef& from);
  void MergeFrom(const CodeDef& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CodeDef* other);
  void UnsafeMergeFrom(const CodeDef& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CodeDef_Trace Trace;

  // accessors -------------------------------------------------------

  // repeated .tensorflow.tfprof.CodeDef.Trace traces = 1;
  int traces_size() const;
  void clear_traces();
  static const int kTracesFieldNumber = 1;
  const ::tensorflow::tfprof::CodeDef_Trace& traces(int index) const;
  ::tensorflow::tfprof::CodeDef_Trace* mutable_traces(int index);
  ::tensorflow::tfprof::CodeDef_Trace* add_traces();
  ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::CodeDef_Trace >*
      mutable_traces();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::CodeDef_Trace >&
      traces() const;

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.CodeDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::CodeDef_Trace > traces_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CodeDef> CodeDef_default_instance_;

// -------------------------------------------------------------------

class OpLogEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.OpLogEntry) */ {
 public:
  OpLogEntry();
  virtual ~OpLogEntry();

  OpLogEntry(const OpLogEntry& from);

  inline OpLogEntry& operator=(const OpLogEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpLogEntry& default_instance();

  static const OpLogEntry* internal_default_instance();

  void Swap(OpLogEntry* other);

  // implements Message ----------------------------------------------

  inline OpLogEntry* New() const { return New(NULL); }

  OpLogEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpLogEntry& from);
  void MergeFrom(const OpLogEntry& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpLogEntry* other);
  void UnsafeMergeFrom(const OpLogEntry& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 float_ops = 2;
  void clear_float_ops();
  static const int kFloatOpsFieldNumber = 2;
  ::google::protobuf::int64 float_ops() const;
  void set_float_ops(::google::protobuf::int64 value);

  // repeated string types = 3;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 3;
  const ::std::string& types(int index) const;
  ::std::string* mutable_types(int index);
  void set_types(int index, const ::std::string& value);
  void set_types(int index, const char* value);
  void set_types(int index, const char* value, size_t size);
  ::std::string* add_types();
  void add_types(const ::std::string& value);
  void add_types(const char* value);
  void add_types(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& types() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_types();

  // optional .tensorflow.tfprof.CodeDef code_def = 4;
  bool has_code_def() const;
  void clear_code_def();
  static const int kCodeDefFieldNumber = 4;
  const ::tensorflow::tfprof::CodeDef& code_def() const;
  ::tensorflow::tfprof::CodeDef* mutable_code_def();
  ::tensorflow::tfprof::CodeDef* release_code_def();
  void set_allocated_code_def(::tensorflow::tfprof::CodeDef* code_def);

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.OpLogEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> types_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::tensorflow::tfprof::CodeDef* code_def_;
  ::google::protobuf::int64 float_ops_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OpLogEntry> OpLogEntry_default_instance_;

// -------------------------------------------------------------------

class OpLogProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.OpLogProto) */ {
 public:
  OpLogProto();
  virtual ~OpLogProto();

  OpLogProto(const OpLogProto& from);

  inline OpLogProto& operator=(const OpLogProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpLogProto& default_instance();

  static const OpLogProto* internal_default_instance();

  void Swap(OpLogProto* other);

  // implements Message ----------------------------------------------

  inline OpLogProto* New() const { return New(NULL); }

  OpLogProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpLogProto& from);
  void MergeFrom(const OpLogProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpLogProto* other);
  void UnsafeMergeFrom(const OpLogProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensorflow.tfprof.OpLogEntry log_entries = 1;
  int log_entries_size() const;
  void clear_log_entries();
  static const int kLogEntriesFieldNumber = 1;
  const ::tensorflow::tfprof::OpLogEntry& log_entries(int index) const;
  ::tensorflow::tfprof::OpLogEntry* mutable_log_entries(int index);
  ::tensorflow::tfprof::OpLogEntry* add_log_entries();
  ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::OpLogEntry >*
      mutable_log_entries();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::OpLogEntry >&
      log_entries() const;

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.OpLogProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::OpLogEntry > log_entries_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OpLogProto> OpLogProto_default_instance_;

// -------------------------------------------------------------------

class ProfileProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.ProfileProto) */ {
 public:
  ProfileProto();
  virtual ~ProfileProto();

  ProfileProto(const ProfileProto& from);

  inline ProfileProto& operator=(const ProfileProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfileProto& default_instance();

  static const ProfileProto* internal_default_instance();

  void Swap(ProfileProto* other);

  // implements Message ----------------------------------------------

  inline ProfileProto* New() const { return New(NULL); }

  ProfileProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProfileProto& from);
  void MergeFrom(const ProfileProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProfileProto* other);
  void UnsafeMergeFrom(const ProfileProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, .tensorflow.tfprof.ProfileNode> nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::tfprof::ProfileNode >&
      nodes() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::tfprof::ProfileNode >*
      mutable_nodes();

  // optional bool has_trace = 2;
  void clear_has_trace();
  static const int kHasTraceFieldNumber = 2;
  bool has_trace() const;
  void set_has_trace(bool value);

  // repeated int64 steps = 3;
  int steps_size() const;
  void clear_steps();
  static const int kStepsFieldNumber = 3;
  ::google::protobuf::int64 steps(int index) const;
  void set_steps(int index, ::google::protobuf::int64 value);
  void add_steps(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      steps() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_steps();

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.ProfileProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::tensorflow::tfprof::ProfileNode,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ProfileProto_NodesEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::tensorflow::tfprof::ProfileNode,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > nodes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > steps_;
  mutable int _steps_cached_byte_size_;
  bool has_trace_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ProfileProto> ProfileProto_default_instance_;

// -------------------------------------------------------------------

class ProfileNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.ProfileNode) */ {
 public:
  ProfileNode();
  virtual ~ProfileNode();

  ProfileNode(const ProfileNode& from);

  inline ProfileNode& operator=(const ProfileNode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfileNode& default_instance();

  static const ProfileNode* internal_default_instance();

  void Swap(ProfileNode* other);

  // implements Message ----------------------------------------------

  inline ProfileNode* New() const { return New(NULL); }

  ProfileNode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProfileNode& from);
  void MergeFrom(const ProfileNode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProfileNode* other);
  void UnsafeMergeFrom(const ProfileNode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string op = 9;
  void clear_op();
  static const int kOpFieldNumber = 9;
  const ::std::string& op() const;
  void set_op(const ::std::string& value);
  void set_op(const char* value);
  void set_op(const char* value, size_t size);
  ::std::string* mutable_op();
  ::std::string* release_op();
  void set_allocated_op(::std::string* op);

  // optional int64 id = 13;
  void clear_id();
  static const int kIdFieldNumber = 13;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // map<int32, int64> inputs = 2;
  int inputs_size() const;
  void clear_inputs();
  static const int kInputsFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      inputs() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_inputs();

  // map<int32, .tensorflow.tfprof.Tuple> input_shapes = 16;
  int input_shapes_size() const;
  void clear_input_shapes();
  static const int kInputShapesFieldNumber = 16;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Tuple >&
      input_shapes() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Tuple >*
      mutable_input_shapes();

  // map<int32, int64> outputs = 3;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      outputs() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_outputs();

  // map<int32, .tensorflow.tfprof.Tuple> output_shapes = 15;
  int output_shapes_size() const;
  void clear_output_shapes();
  static const int kOutputShapesFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Tuple >&
      output_shapes() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Tuple >*
      mutable_output_shapes();

  // map<int64, int32> src_output_index = 14;
  int src_output_index_size() const;
  void clear_src_output_index();
  static const int kSrcOutputIndexFieldNumber = 14;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
      src_output_index() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
      mutable_src_output_index();

  // repeated int64 shape = 4;
  int shape_size() const;
  void clear_shape();
  static const int kShapeFieldNumber = 4;
  ::google::protobuf::int64 shape(int index) const;
  void set_shape(int index, ::google::protobuf::int64 value);
  void add_shape(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      shape() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_shape();

  // repeated string op_types = 5;
  int op_types_size() const;
  void clear_op_types();
  static const int kOpTypesFieldNumber = 5;
  const ::std::string& op_types(int index) const;
  ::std::string* mutable_op_types(int index);
  void set_op_types(int index, const ::std::string& value);
  void set_op_types(int index, const char* value);
  void set_op_types(int index, const char* value, size_t size);
  ::std::string* add_op_types();
  void add_op_types(const ::std::string& value);
  void add_op_types(const char* value);
  void add_op_types(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& op_types() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_op_types();

  // optional string canonical_device = 6;
  void clear_canonical_device();
  static const int kCanonicalDeviceFieldNumber = 6;
  const ::std::string& canonical_device() const;
  void set_canonical_device(const ::std::string& value);
  void set_canonical_device(const char* value);
  void set_canonical_device(const char* value, size_t size);
  ::std::string* mutable_canonical_device();
  ::std::string* release_canonical_device();
  void set_allocated_canonical_device(::std::string* canonical_device);

  // optional string host_device = 7;
  void clear_host_device();
  static const int kHostDeviceFieldNumber = 7;
  const ::std::string& host_device() const;
  void set_host_device(const ::std::string& value);
  void set_host_device(const char* value);
  void set_host_device(const char* value, size_t size);
  ::std::string* mutable_host_device();
  ::std::string* release_host_device();
  void set_allocated_host_device(::std::string* host_device);

  // optional int64 float_ops = 8;
  void clear_float_ops();
  static const int kFloatOpsFieldNumber = 8;
  ::google::protobuf::int64 float_ops() const;
  void set_float_ops(::google::protobuf::int64 value);

  // optional .tensorflow.tfprof.CodeDef trace = 10;
  bool has_trace() const;
  void clear_trace();
  static const int kTraceFieldNumber = 10;
  const ::tensorflow::tfprof::CodeDef& trace() const;
  ::tensorflow::tfprof::CodeDef* mutable_trace();
  ::tensorflow::tfprof::CodeDef* release_trace();
  void set_allocated_trace(::tensorflow::tfprof::CodeDef* trace);

  // map<string, .tensorflow.AttrValue> attrs = 11;
  int attrs_size() const;
  void clear_attrs();
  static const int kAttrsFieldNumber = 11;
  const ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >&
      attrs() const;
  ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >*
      mutable_attrs();

  // map<int64, .tensorflow.tfprof.ExecProfile> execs = 12;
  int execs_size() const;
  void clear_execs();
  static const int kExecsFieldNumber = 12;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::tfprof::ExecProfile >&
      execs() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::tfprof::ExecProfile >*
      mutable_execs();

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.ProfileNode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      ProfileNode_InputsEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > inputs_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::tensorflow::tfprof::Tuple,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ProfileNode_InputShapesEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::tensorflow::tfprof::Tuple,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > input_shapes_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      ProfileNode_OutputsEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > outputs_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::tensorflow::tfprof::Tuple,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ProfileNode_OutputShapesEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::tensorflow::tfprof::Tuple,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > output_shapes_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      ProfileNode_SrcOutputIndexEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > src_output_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > shape_;
  mutable int _shape_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> op_types_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::tensorflow::AttrValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ProfileNode_AttrsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::tensorflow::AttrValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > attrs_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::tensorflow::tfprof::ExecProfile,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ProfileNode_ExecsEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::tensorflow::tfprof::ExecProfile,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > execs_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr op_;
  ::google::protobuf::internal::ArenaStringPtr canonical_device_;
  ::google::protobuf::internal::ArenaStringPtr host_device_;
  ::tensorflow::tfprof::CodeDef* trace_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 float_ops_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ProfileNode> ProfileNode_default_instance_;

// -------------------------------------------------------------------

class ExecProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.ExecProfile) */ {
 public:
  ExecProfile();
  virtual ~ExecProfile();

  ExecProfile(const ExecProfile& from);

  inline ExecProfile& operator=(const ExecProfile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecProfile& default_instance();

  static const ExecProfile* internal_default_instance();

  void Swap(ExecProfile* other);

  // implements Message ----------------------------------------------

  inline ExecProfile* New() const { return New(NULL); }

  ExecProfile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecProfile& from);
  void MergeFrom(const ExecProfile& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecProfile* other);
  void UnsafeMergeFrom(const ExecProfile& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional int64 run_count = 1;
  void clear_run_count();
  static const int kRunCountFieldNumber = 1;
  ::google::protobuf::int64 run_count() const;
  void set_run_count(::google::protobuf::int64 value);

  // optional int64 all_start_micros = 2;
  void clear_all_start_micros();
  static const int kAllStartMicrosFieldNumber = 2;
  ::google::protobuf::int64 all_start_micros() const;
  void set_all_start_micros(::google::protobuf::int64 value);

  // optional int64 latest_end_micros = 3;
  void clear_latest_end_micros();
  static const int kLatestEndMicrosFieldNumber = 3;
  ::google::protobuf::int64 latest_end_micros() const;
  void set_latest_end_micros(::google::protobuf::int64 value);

  // map<string, .tensorflow.tfprof.ExecTime> accelerator_execs = 4;
  int accelerator_execs_size() const;
  void clear_accelerator_execs();
  static const int kAcceleratorExecsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::tensorflow::tfprof::ExecTime >&
      accelerator_execs() const;
  ::google::protobuf::Map< ::std::string, ::tensorflow::tfprof::ExecTime >*
      mutable_accelerator_execs();

  // map<string, .tensorflow.tfprof.ExecTime> cpu_execs = 5;
  int cpu_execs_size() const;
  void clear_cpu_execs();
  static const int kCpuExecsFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::tensorflow::tfprof::ExecTime >&
      cpu_execs() const;
  ::google::protobuf::Map< ::std::string, ::tensorflow::tfprof::ExecTime >*
      mutable_cpu_execs();

  // map<int32, .tensorflow.tfprof.Memory> output_memory = 17;
  int output_memory_size() const;
  void clear_output_memory();
  static const int kOutputMemoryFieldNumber = 17;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Memory >&
      output_memory() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Memory >*
      mutable_output_memory();

  // repeated string devices = 6;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 6;
  const ::std::string& devices(int index) const;
  ::std::string* mutable_devices(int index);
  void set_devices(int index, const ::std::string& value);
  void set_devices(int index, const char* value);
  void set_devices(int index, const char* value, size_t size);
  ::std::string* add_devices();
  void add_devices(const ::std::string& value);
  void add_devices(const char* value);
  void add_devices(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& devices() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_devices();

  // optional int64 requested_bytes = 7;
  void clear_requested_bytes();
  static const int kRequestedBytesFieldNumber = 7;
  ::google::protobuf::int64 requested_bytes() const;
  void set_requested_bytes(::google::protobuf::int64 value);

  // optional int64 peak_bytes = 8;
  void clear_peak_bytes();
  static const int kPeakBytesFieldNumber = 8;
  ::google::protobuf::int64 peak_bytes() const;
  void set_peak_bytes(::google::protobuf::int64 value);

  // optional int64 residual_bytes = 9;
  void clear_residual_bytes();
  static const int kResidualBytesFieldNumber = 9;
  ::google::protobuf::int64 residual_bytes() const;
  void set_residual_bytes(::google::protobuf::int64 value);

  // optional int64 output_bytes = 10;
  void clear_output_bytes();
  static const int kOutputBytesFieldNumber = 10;
  ::google::protobuf::int64 output_bytes() const;
  void set_output_bytes(::google::protobuf::int64 value);

  // optional int64 host_temp_bytes = 11;
  void clear_host_temp_bytes();
  static const int kHostTempBytesFieldNumber = 11;
  ::google::protobuf::int64 host_temp_bytes() const;
  void set_host_temp_bytes(::google::protobuf::int64 value);

  // optional int64 host_persistent_bytes = 12;
  void clear_host_persistent_bytes();
  static const int kHostPersistentBytesFieldNumber = 12;
  ::google::protobuf::int64 host_persistent_bytes() const;
  void set_host_persistent_bytes(::google::protobuf::int64 value);

  // optional int64 accelerator_temp_bytes = 13;
  void clear_accelerator_temp_bytes();
  static const int kAcceleratorTempBytesFieldNumber = 13;
  ::google::protobuf::int64 accelerator_temp_bytes() const;
  void set_accelerator_temp_bytes(::google::protobuf::int64 value);

  // optional int64 accelerator_persistent_bytes = 14;
  void clear_accelerator_persistent_bytes();
  static const int kAcceleratorPersistentBytesFieldNumber = 14;
  ::google::protobuf::int64 accelerator_persistent_bytes() const;
  void set_accelerator_persistent_bytes(::google::protobuf::int64 value);

  // optional int64 allocator_bytes_in_use = 15;
  void clear_allocator_bytes_in_use();
  static const int kAllocatorBytesInUseFieldNumber = 15;
  ::google::protobuf::int64 allocator_bytes_in_use() const;
  void set_allocator_bytes_in_use(::google::protobuf::int64 value);

  // optional bool memory_intialized = 16;
  void clear_memory_intialized();
  static const int kMemoryIntializedFieldNumber = 16;
  bool memory_intialized() const;
  void set_memory_intialized(bool value);

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.ExecProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::tensorflow::tfprof::ExecTime,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ExecProfile_AcceleratorExecsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::tensorflow::tfprof::ExecTime,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > accelerator_execs_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::tensorflow::tfprof::ExecTime,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ExecProfile_CpuExecsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::tensorflow::tfprof::ExecTime,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > cpu_execs_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::tensorflow::tfprof::Memory,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ExecProfile_OutputMemoryEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::tensorflow::tfprof::Memory,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > output_memory_;
  ::google::protobuf::RepeatedPtrField< ::std::string> devices_;
  ::google::protobuf::int64 run_count_;
  ::google::protobuf::int64 all_start_micros_;
  ::google::protobuf::int64 latest_end_micros_;
  ::google::protobuf::int64 requested_bytes_;
  ::google::protobuf::int64 peak_bytes_;
  ::google::protobuf::int64 residual_bytes_;
  ::google::protobuf::int64 output_bytes_;
  ::google::protobuf::int64 host_temp_bytes_;
  ::google::protobuf::int64 host_persistent_bytes_;
  ::google::protobuf::int64 accelerator_temp_bytes_;
  ::google::protobuf::int64 accelerator_persistent_bytes_;
  ::google::protobuf::int64 allocator_bytes_in_use_;
  bool memory_intialized_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ExecProfile> ExecProfile_default_instance_;

// -------------------------------------------------------------------

class ExecTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.ExecTime) */ {
 public:
  ExecTime();
  virtual ~ExecTime();

  ExecTime(const ExecTime& from);

  inline ExecTime& operator=(const ExecTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecTime& default_instance();

  static const ExecTime* internal_default_instance();

  void Swap(ExecTime* other);

  // implements Message ----------------------------------------------

  inline ExecTime* New() const { return New(NULL); }

  ExecTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecTime& from);
  void MergeFrom(const ExecTime& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecTime* other);
  void UnsafeMergeFrom(const ExecTime& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensorflow.tfprof.Tuple times = 1;
  int times_size() const;
  void clear_times();
  static const int kTimesFieldNumber = 1;
  const ::tensorflow::tfprof::Tuple& times(int index) const;
  ::tensorflow::tfprof::Tuple* mutable_times(int index);
  ::tensorflow::tfprof::Tuple* add_times();
  ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::Tuple >*
      mutable_times();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::Tuple >&
      times() const;

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.ExecTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::Tuple > times_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ExecTime> ExecTime_default_instance_;

// -------------------------------------------------------------------

class Tuple : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.Tuple) */ {
 public:
  Tuple();
  virtual ~Tuple();

  Tuple(const Tuple& from);

  inline Tuple& operator=(const Tuple& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple& default_instance();

  static const Tuple* internal_default_instance();

  void Swap(Tuple* other);

  // implements Message ----------------------------------------------

  inline Tuple* New() const { return New(NULL); }

  Tuple* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple& from);
  void MergeFrom(const Tuple& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tuple* other);
  void UnsafeMergeFrom(const Tuple& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 int64_values = 1;
  int int64_values_size() const;
  void clear_int64_values();
  static const int kInt64ValuesFieldNumber = 1;
  ::google::protobuf::int64 int64_values(int index) const;
  void set_int64_values(int index, ::google::protobuf::int64 value);
  void add_int64_values(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      int64_values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_int64_values();

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.Tuple)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > int64_values_;
  mutable int _int64_values_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Tuple> Tuple_default_instance_;

// -------------------------------------------------------------------

class Memory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.tfprof.Memory) */ {
 public:
  Memory();
  virtual ~Memory();

  Memory(const Memory& from);

  inline Memory& operator=(const Memory& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Memory& default_instance();

  static const Memory* internal_default_instance();

  void Swap(Memory* other);

  // implements Message ----------------------------------------------

  inline Memory* New() const { return New(NULL); }

  Memory* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Memory& from);
  void MergeFrom(const Memory& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Memory* other);
  void UnsafeMergeFrom(const Memory& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 bytes = 1;
  void clear_bytes();
  static const int kBytesFieldNumber = 1;
  ::google::protobuf::int64 bytes() const;
  void set_bytes(::google::protobuf::int64 value);

  // optional uint64 ptr = 2;
  void clear_ptr();
  static const int kPtrFieldNumber = 2;
  ::google::protobuf::uint64 ptr() const;
  void set_ptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.Memory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 bytes_;
  ::google::protobuf::uint64 ptr_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void  protobuf_AddDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto_impl();
  friend void protobuf_AssignDesc_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Memory> Memory_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CodeDef_Trace

// optional string file = 1;
inline void CodeDef_Trace::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CodeDef_Trace::file() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.CodeDef.Trace.file)
  return file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeDef_Trace::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.CodeDef.Trace.file)
}
inline void CodeDef_Trace::set_file(const char* value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.CodeDef.Trace.file)
}
inline void CodeDef_Trace::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.CodeDef.Trace.file)
}
inline ::std::string* CodeDef_Trace::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.CodeDef.Trace.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CodeDef_Trace::release_file() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.CodeDef.Trace.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeDef_Trace::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.CodeDef.Trace.file)
}

// optional int32 lineno = 2;
inline void CodeDef_Trace::clear_lineno() {
  lineno_ = 0;
}
inline ::google::protobuf::int32 CodeDef_Trace::lineno() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.CodeDef.Trace.lineno)
  return lineno_;
}
inline void CodeDef_Trace::set_lineno(::google::protobuf::int32 value) {
  
  lineno_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.CodeDef.Trace.lineno)
}

// optional string function = 3;
inline void CodeDef_Trace::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CodeDef_Trace::function() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.CodeDef.Trace.function)
  return function_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeDef_Trace::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.CodeDef.Trace.function)
}
inline void CodeDef_Trace::set_function(const char* value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.CodeDef.Trace.function)
}
inline void CodeDef_Trace::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.CodeDef.Trace.function)
}
inline ::std::string* CodeDef_Trace::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.CodeDef.Trace.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CodeDef_Trace::release_function() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.CodeDef.Trace.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeDef_Trace::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.CodeDef.Trace.function)
}

// optional string line = 4;
inline void CodeDef_Trace::clear_line() {
  line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CodeDef_Trace::line() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.CodeDef.Trace.line)
  return line_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeDef_Trace::set_line(const ::std::string& value) {
  
  line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.CodeDef.Trace.line)
}
inline void CodeDef_Trace::set_line(const char* value) {
  
  line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.CodeDef.Trace.line)
}
inline void CodeDef_Trace::set_line(const char* value, size_t size) {
  
  line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.CodeDef.Trace.line)
}
inline ::std::string* CodeDef_Trace::mutable_line() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.CodeDef.Trace.line)
  return line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CodeDef_Trace::release_line() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.CodeDef.Trace.line)
  
  return line_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeDef_Trace::set_allocated_line(::std::string* line) {
  if (line != NULL) {
    
  } else {
    
  }
  line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), line);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.CodeDef.Trace.line)
}

// optional int32 func_start_line = 5;
inline void CodeDef_Trace::clear_func_start_line() {
  func_start_line_ = 0;
}
inline ::google::protobuf::int32 CodeDef_Trace::func_start_line() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.CodeDef.Trace.func_start_line)
  return func_start_line_;
}
inline void CodeDef_Trace::set_func_start_line(::google::protobuf::int32 value) {
  
  func_start_line_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.CodeDef.Trace.func_start_line)
}

inline const CodeDef_Trace* CodeDef_Trace::internal_default_instance() {
  return &CodeDef_Trace_default_instance_.get();
}
// -------------------------------------------------------------------

// CodeDef

// repeated .tensorflow.tfprof.CodeDef.Trace traces = 1;
inline int CodeDef::traces_size() const {
  return traces_.size();
}
inline void CodeDef::clear_traces() {
  traces_.Clear();
}
inline const ::tensorflow::tfprof::CodeDef_Trace& CodeDef::traces(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.CodeDef.traces)
  return traces_.Get(index);
}
inline ::tensorflow::tfprof::CodeDef_Trace* CodeDef::mutable_traces(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.CodeDef.traces)
  return traces_.Mutable(index);
}
inline ::tensorflow::tfprof::CodeDef_Trace* CodeDef::add_traces() {
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.CodeDef.traces)
  return traces_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::CodeDef_Trace >*
CodeDef::mutable_traces() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.CodeDef.traces)
  return &traces_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::CodeDef_Trace >&
CodeDef::traces() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.CodeDef.traces)
  return traces_;
}

inline const CodeDef* CodeDef::internal_default_instance() {
  return &CodeDef_default_instance_.get();
}
// -------------------------------------------------------------------

// OpLogEntry

// optional string name = 1;
inline void OpLogEntry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpLogEntry::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OpLogEntry.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpLogEntry::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OpLogEntry.name)
}
inline void OpLogEntry::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.OpLogEntry.name)
}
inline void OpLogEntry::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.OpLogEntry.name)
}
inline ::std::string* OpLogEntry::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OpLogEntry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpLogEntry::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.OpLogEntry.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpLogEntry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.OpLogEntry.name)
}

// optional int64 float_ops = 2;
inline void OpLogEntry::clear_float_ops() {
  float_ops_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OpLogEntry::float_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OpLogEntry.float_ops)
  return float_ops_;
}
inline void OpLogEntry::set_float_ops(::google::protobuf::int64 value) {
  
  float_ops_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OpLogEntry.float_ops)
}

// repeated string types = 3;
inline int OpLogEntry::types_size() const {
  return types_.size();
}
inline void OpLogEntry::clear_types() {
  types_.Clear();
}
inline const ::std::string& OpLogEntry::types(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OpLogEntry.types)
  return types_.Get(index);
}
inline ::std::string* OpLogEntry::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OpLogEntry.types)
  return types_.Mutable(index);
}
inline void OpLogEntry::set_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OpLogEntry.types)
  types_.Mutable(index)->assign(value);
}
inline void OpLogEntry::set_types(int index, const char* value) {
  types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.OpLogEntry.types)
}
inline void OpLogEntry::set_types(int index, const char* value, size_t size) {
  types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.OpLogEntry.types)
}
inline ::std::string* OpLogEntry::add_types() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.OpLogEntry.types)
  return types_.Add();
}
inline void OpLogEntry::add_types(const ::std::string& value) {
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.OpLogEntry.types)
}
inline void OpLogEntry::add_types(const char* value) {
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.tfprof.OpLogEntry.types)
}
inline void OpLogEntry::add_types(const char* value, size_t size) {
  types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.tfprof.OpLogEntry.types)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OpLogEntry::types() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.OpLogEntry.types)
  return types_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OpLogEntry::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.OpLogEntry.types)
  return &types_;
}

// optional .tensorflow.tfprof.CodeDef code_def = 4;
inline bool OpLogEntry::has_code_def() const {
  return this != internal_default_instance() && code_def_ != NULL;
}
inline void OpLogEntry::clear_code_def() {
  if (GetArenaNoVirtual() == NULL && code_def_ != NULL) delete code_def_;
  code_def_ = NULL;
}
inline const ::tensorflow::tfprof::CodeDef& OpLogEntry::code_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OpLogEntry.code_def)
  return code_def_ != NULL ? *code_def_
                         : *::tensorflow::tfprof::CodeDef::internal_default_instance();
}
inline ::tensorflow::tfprof::CodeDef* OpLogEntry::mutable_code_def() {
  
  if (code_def_ == NULL) {
    code_def_ = new ::tensorflow::tfprof::CodeDef;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OpLogEntry.code_def)
  return code_def_;
}
inline ::tensorflow::tfprof::CodeDef* OpLogEntry::release_code_def() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.OpLogEntry.code_def)
  
  ::tensorflow::tfprof::CodeDef* temp = code_def_;
  code_def_ = NULL;
  return temp;
}
inline void OpLogEntry::set_allocated_code_def(::tensorflow::tfprof::CodeDef* code_def) {
  delete code_def_;
  code_def_ = code_def;
  if (code_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.OpLogEntry.code_def)
}

inline const OpLogEntry* OpLogEntry::internal_default_instance() {
  return &OpLogEntry_default_instance_.get();
}
// -------------------------------------------------------------------

// OpLogProto

// repeated .tensorflow.tfprof.OpLogEntry log_entries = 1;
inline int OpLogProto::log_entries_size() const {
  return log_entries_.size();
}
inline void OpLogProto::clear_log_entries() {
  log_entries_.Clear();
}
inline const ::tensorflow::tfprof::OpLogEntry& OpLogProto::log_entries(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OpLogProto.log_entries)
  return log_entries_.Get(index);
}
inline ::tensorflow::tfprof::OpLogEntry* OpLogProto::mutable_log_entries(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OpLogProto.log_entries)
  return log_entries_.Mutable(index);
}
inline ::tensorflow::tfprof::OpLogEntry* OpLogProto::add_log_entries() {
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.OpLogProto.log_entries)
  return log_entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::OpLogEntry >*
OpLogProto::mutable_log_entries() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.OpLogProto.log_entries)
  return &log_entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::OpLogEntry >&
OpLogProto::log_entries() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.OpLogProto.log_entries)
  return log_entries_;
}

inline const OpLogProto* OpLogProto::internal_default_instance() {
  return &OpLogProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ProfileProto

// map<int64, .tensorflow.tfprof.ProfileNode> nodes = 1;
inline int ProfileProto::nodes_size() const {
  return nodes_.size();
}
inline void ProfileProto::clear_nodes() {
  nodes_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::tfprof::ProfileNode >&
ProfileProto::nodes() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ProfileProto.nodes)
  return nodes_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::tfprof::ProfileNode >*
ProfileProto::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ProfileProto.nodes)
  return nodes_.MutableMap();
}

// optional bool has_trace = 2;
inline void ProfileProto::clear_has_trace() {
  has_trace_ = false;
}
inline bool ProfileProto::has_trace() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileProto.has_trace)
  return has_trace_;
}
inline void ProfileProto::set_has_trace(bool value) {
  
  has_trace_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileProto.has_trace)
}

// repeated int64 steps = 3;
inline int ProfileProto::steps_size() const {
  return steps_.size();
}
inline void ProfileProto::clear_steps() {
  steps_.Clear();
}
inline ::google::protobuf::int64 ProfileProto::steps(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileProto.steps)
  return steps_.Get(index);
}
inline void ProfileProto::set_steps(int index, ::google::protobuf::int64 value) {
  steps_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileProto.steps)
}
inline void ProfileProto::add_steps(::google::protobuf::int64 value) {
  steps_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.ProfileProto.steps)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProfileProto::steps() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.ProfileProto.steps)
  return steps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProfileProto::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.ProfileProto.steps)
  return &steps_;
}

inline const ProfileProto* ProfileProto::internal_default_instance() {
  return &ProfileProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ProfileNode

// optional string name = 1;
inline void ProfileNode::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileNode::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileNode::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileNode.name)
}
inline void ProfileNode::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.ProfileNode.name)
}
inline void ProfileNode::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.ProfileNode.name)
}
inline ::std::string* ProfileNode::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.ProfileNode.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileNode::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.ProfileNode.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileNode::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.ProfileNode.name)
}

// optional string op = 9;
inline void ProfileNode::clear_op() {
  op_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileNode::op() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.op)
  return op_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileNode::set_op(const ::std::string& value) {
  
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileNode.op)
}
inline void ProfileNode::set_op(const char* value) {
  
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.ProfileNode.op)
}
inline void ProfileNode::set_op(const char* value, size_t size) {
  
  op_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.ProfileNode.op)
}
inline ::std::string* ProfileNode::mutable_op() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.ProfileNode.op)
  return op_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileNode::release_op() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.ProfileNode.op)
  
  return op_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileNode::set_allocated_op(::std::string* op) {
  if (op != NULL) {
    
  } else {
    
  }
  op_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.ProfileNode.op)
}

// optional int64 id = 13;
inline void ProfileNode::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProfileNode::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.id)
  return id_;
}
inline void ProfileNode::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileNode.id)
}

// map<int32, int64> inputs = 2;
inline int ProfileNode::inputs_size() const {
  return inputs_.size();
}
inline void ProfileNode::clear_inputs() {
  inputs_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
ProfileNode::inputs() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ProfileNode.inputs)
  return inputs_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
ProfileNode::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ProfileNode.inputs)
  return inputs_.MutableMap();
}

// map<int32, .tensorflow.tfprof.Tuple> input_shapes = 16;
inline int ProfileNode::input_shapes_size() const {
  return input_shapes_.size();
}
inline void ProfileNode::clear_input_shapes() {
  input_shapes_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Tuple >&
ProfileNode::input_shapes() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ProfileNode.input_shapes)
  return input_shapes_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Tuple >*
ProfileNode::mutable_input_shapes() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ProfileNode.input_shapes)
  return input_shapes_.MutableMap();
}

// map<int32, int64> outputs = 3;
inline int ProfileNode::outputs_size() const {
  return outputs_.size();
}
inline void ProfileNode::clear_outputs() {
  outputs_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
ProfileNode::outputs() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ProfileNode.outputs)
  return outputs_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
ProfileNode::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ProfileNode.outputs)
  return outputs_.MutableMap();
}

// map<int32, .tensorflow.tfprof.Tuple> output_shapes = 15;
inline int ProfileNode::output_shapes_size() const {
  return output_shapes_.size();
}
inline void ProfileNode::clear_output_shapes() {
  output_shapes_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Tuple >&
ProfileNode::output_shapes() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ProfileNode.output_shapes)
  return output_shapes_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Tuple >*
ProfileNode::mutable_output_shapes() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ProfileNode.output_shapes)
  return output_shapes_.MutableMap();
}

// map<int64, int32> src_output_index = 14;
inline int ProfileNode::src_output_index_size() const {
  return src_output_index_.size();
}
inline void ProfileNode::clear_src_output_index() {
  src_output_index_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >&
ProfileNode::src_output_index() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ProfileNode.src_output_index)
  return src_output_index_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int32 >*
ProfileNode::mutable_src_output_index() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ProfileNode.src_output_index)
  return src_output_index_.MutableMap();
}

// repeated int64 shape = 4;
inline int ProfileNode::shape_size() const {
  return shape_.size();
}
inline void ProfileNode::clear_shape() {
  shape_.Clear();
}
inline ::google::protobuf::int64 ProfileNode::shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.shape)
  return shape_.Get(index);
}
inline void ProfileNode::set_shape(int index, ::google::protobuf::int64 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileNode.shape)
}
inline void ProfileNode::add_shape(::google::protobuf::int64 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.ProfileNode.shape)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProfileNode::shape() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.ProfileNode.shape)
  return shape_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProfileNode::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.ProfileNode.shape)
  return &shape_;
}

// repeated string op_types = 5;
inline int ProfileNode::op_types_size() const {
  return op_types_.size();
}
inline void ProfileNode::clear_op_types() {
  op_types_.Clear();
}
inline const ::std::string& ProfileNode::op_types(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.op_types)
  return op_types_.Get(index);
}
inline ::std::string* ProfileNode::mutable_op_types(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.ProfileNode.op_types)
  return op_types_.Mutable(index);
}
inline void ProfileNode::set_op_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileNode.op_types)
  op_types_.Mutable(index)->assign(value);
}
inline void ProfileNode::set_op_types(int index, const char* value) {
  op_types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.ProfileNode.op_types)
}
inline void ProfileNode::set_op_types(int index, const char* value, size_t size) {
  op_types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.ProfileNode.op_types)
}
inline ::std::string* ProfileNode::add_op_types() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.ProfileNode.op_types)
  return op_types_.Add();
}
inline void ProfileNode::add_op_types(const ::std::string& value) {
  op_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.ProfileNode.op_types)
}
inline void ProfileNode::add_op_types(const char* value) {
  op_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.tfprof.ProfileNode.op_types)
}
inline void ProfileNode::add_op_types(const char* value, size_t size) {
  op_types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.tfprof.ProfileNode.op_types)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProfileNode::op_types() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.ProfileNode.op_types)
  return op_types_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProfileNode::mutable_op_types() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.ProfileNode.op_types)
  return &op_types_;
}

// optional string canonical_device = 6;
inline void ProfileNode::clear_canonical_device() {
  canonical_device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileNode::canonical_device() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.canonical_device)
  return canonical_device_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileNode::set_canonical_device(const ::std::string& value) {
  
  canonical_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileNode.canonical_device)
}
inline void ProfileNode::set_canonical_device(const char* value) {
  
  canonical_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.ProfileNode.canonical_device)
}
inline void ProfileNode::set_canonical_device(const char* value, size_t size) {
  
  canonical_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.ProfileNode.canonical_device)
}
inline ::std::string* ProfileNode::mutable_canonical_device() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.ProfileNode.canonical_device)
  return canonical_device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileNode::release_canonical_device() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.ProfileNode.canonical_device)
  
  return canonical_device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileNode::set_allocated_canonical_device(::std::string* canonical_device) {
  if (canonical_device != NULL) {
    
  } else {
    
  }
  canonical_device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), canonical_device);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.ProfileNode.canonical_device)
}

// optional string host_device = 7;
inline void ProfileNode::clear_host_device() {
  host_device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProfileNode::host_device() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.host_device)
  return host_device_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileNode::set_host_device(const ::std::string& value) {
  
  host_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileNode.host_device)
}
inline void ProfileNode::set_host_device(const char* value) {
  
  host_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.ProfileNode.host_device)
}
inline void ProfileNode::set_host_device(const char* value, size_t size) {
  
  host_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.ProfileNode.host_device)
}
inline ::std::string* ProfileNode::mutable_host_device() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.ProfileNode.host_device)
  return host_device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProfileNode::release_host_device() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.ProfileNode.host_device)
  
  return host_device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProfileNode::set_allocated_host_device(::std::string* host_device) {
  if (host_device != NULL) {
    
  } else {
    
  }
  host_device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_device);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.ProfileNode.host_device)
}

// optional int64 float_ops = 8;
inline void ProfileNode::clear_float_ops() {
  float_ops_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProfileNode::float_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.float_ops)
  return float_ops_;
}
inline void ProfileNode::set_float_ops(::google::protobuf::int64 value) {
  
  float_ops_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ProfileNode.float_ops)
}

// optional .tensorflow.tfprof.CodeDef trace = 10;
inline bool ProfileNode::has_trace() const {
  return this != internal_default_instance() && trace_ != NULL;
}
inline void ProfileNode::clear_trace() {
  if (GetArenaNoVirtual() == NULL && trace_ != NULL) delete trace_;
  trace_ = NULL;
}
inline const ::tensorflow::tfprof::CodeDef& ProfileNode::trace() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ProfileNode.trace)
  return trace_ != NULL ? *trace_
                         : *::tensorflow::tfprof::CodeDef::internal_default_instance();
}
inline ::tensorflow::tfprof::CodeDef* ProfileNode::mutable_trace() {
  
  if (trace_ == NULL) {
    trace_ = new ::tensorflow::tfprof::CodeDef;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.ProfileNode.trace)
  return trace_;
}
inline ::tensorflow::tfprof::CodeDef* ProfileNode::release_trace() {
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.ProfileNode.trace)
  
  ::tensorflow::tfprof::CodeDef* temp = trace_;
  trace_ = NULL;
  return temp;
}
inline void ProfileNode::set_allocated_trace(::tensorflow::tfprof::CodeDef* trace) {
  delete trace_;
  trace_ = trace;
  if (trace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.ProfileNode.trace)
}

// map<string, .tensorflow.AttrValue> attrs = 11;
inline int ProfileNode::attrs_size() const {
  return attrs_.size();
}
inline void ProfileNode::clear_attrs() {
  attrs_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >&
ProfileNode::attrs() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ProfileNode.attrs)
  return attrs_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::tensorflow::AttrValue >*
ProfileNode::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ProfileNode.attrs)
  return attrs_.MutableMap();
}

// map<int64, .tensorflow.tfprof.ExecProfile> execs = 12;
inline int ProfileNode::execs_size() const {
  return execs_.size();
}
inline void ProfileNode::clear_execs() {
  execs_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::tfprof::ExecProfile >&
ProfileNode::execs() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ProfileNode.execs)
  return execs_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::tensorflow::tfprof::ExecProfile >*
ProfileNode::mutable_execs() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ProfileNode.execs)
  return execs_.MutableMap();
}

inline const ProfileNode* ProfileNode::internal_default_instance() {
  return &ProfileNode_default_instance_.get();
}
// -------------------------------------------------------------------

// ExecProfile

// optional int64 run_count = 1;
inline void ExecProfile::clear_run_count() {
  run_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::run_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.run_count)
  return run_count_;
}
inline void ExecProfile::set_run_count(::google::protobuf::int64 value) {
  
  run_count_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.run_count)
}

// optional int64 all_start_micros = 2;
inline void ExecProfile::clear_all_start_micros() {
  all_start_micros_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::all_start_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.all_start_micros)
  return all_start_micros_;
}
inline void ExecProfile::set_all_start_micros(::google::protobuf::int64 value) {
  
  all_start_micros_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.all_start_micros)
}

// optional int64 latest_end_micros = 3;
inline void ExecProfile::clear_latest_end_micros() {
  latest_end_micros_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::latest_end_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.latest_end_micros)
  return latest_end_micros_;
}
inline void ExecProfile::set_latest_end_micros(::google::protobuf::int64 value) {
  
  latest_end_micros_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.latest_end_micros)
}

// map<string, .tensorflow.tfprof.ExecTime> accelerator_execs = 4;
inline int ExecProfile::accelerator_execs_size() const {
  return accelerator_execs_.size();
}
inline void ExecProfile::clear_accelerator_execs() {
  accelerator_execs_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::tensorflow::tfprof::ExecTime >&
ExecProfile::accelerator_execs() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ExecProfile.accelerator_execs)
  return accelerator_execs_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::tensorflow::tfprof::ExecTime >*
ExecProfile::mutable_accelerator_execs() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ExecProfile.accelerator_execs)
  return accelerator_execs_.MutableMap();
}

// map<string, .tensorflow.tfprof.ExecTime> cpu_execs = 5;
inline int ExecProfile::cpu_execs_size() const {
  return cpu_execs_.size();
}
inline void ExecProfile::clear_cpu_execs() {
  cpu_execs_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::tensorflow::tfprof::ExecTime >&
ExecProfile::cpu_execs() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ExecProfile.cpu_execs)
  return cpu_execs_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::tensorflow::tfprof::ExecTime >*
ExecProfile::mutable_cpu_execs() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ExecProfile.cpu_execs)
  return cpu_execs_.MutableMap();
}

// map<int32, .tensorflow.tfprof.Memory> output_memory = 17;
inline int ExecProfile::output_memory_size() const {
  return output_memory_.size();
}
inline void ExecProfile::clear_output_memory() {
  output_memory_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Memory >&
ExecProfile::output_memory() const {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.ExecProfile.output_memory)
  return output_memory_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::tensorflow::tfprof::Memory >*
ExecProfile::mutable_output_memory() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.ExecProfile.output_memory)
  return output_memory_.MutableMap();
}

// repeated string devices = 6;
inline int ExecProfile::devices_size() const {
  return devices_.size();
}
inline void ExecProfile::clear_devices() {
  devices_.Clear();
}
inline const ::std::string& ExecProfile::devices(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.devices)
  return devices_.Get(index);
}
inline ::std::string* ExecProfile::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.ExecProfile.devices)
  return devices_.Mutable(index);
}
inline void ExecProfile::set_devices(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.devices)
  devices_.Mutable(index)->assign(value);
}
inline void ExecProfile::set_devices(int index, const char* value) {
  devices_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.tfprof.ExecProfile.devices)
}
inline void ExecProfile::set_devices(int index, const char* value, size_t size) {
  devices_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.tfprof.ExecProfile.devices)
}
inline ::std::string* ExecProfile::add_devices() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.ExecProfile.devices)
  return devices_.Add();
}
inline void ExecProfile::add_devices(const ::std::string& value) {
  devices_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.ExecProfile.devices)
}
inline void ExecProfile::add_devices(const char* value) {
  devices_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.tfprof.ExecProfile.devices)
}
inline void ExecProfile::add_devices(const char* value, size_t size) {
  devices_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.tfprof.ExecProfile.devices)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ExecProfile::devices() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.ExecProfile.devices)
  return devices_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ExecProfile::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.ExecProfile.devices)
  return &devices_;
}

// optional int64 requested_bytes = 7;
inline void ExecProfile::clear_requested_bytes() {
  requested_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::requested_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.requested_bytes)
  return requested_bytes_;
}
inline void ExecProfile::set_requested_bytes(::google::protobuf::int64 value) {
  
  requested_bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.requested_bytes)
}

// optional int64 peak_bytes = 8;
inline void ExecProfile::clear_peak_bytes() {
  peak_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::peak_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.peak_bytes)
  return peak_bytes_;
}
inline void ExecProfile::set_peak_bytes(::google::protobuf::int64 value) {
  
  peak_bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.peak_bytes)
}

// optional int64 residual_bytes = 9;
inline void ExecProfile::clear_residual_bytes() {
  residual_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::residual_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.residual_bytes)
  return residual_bytes_;
}
inline void ExecProfile::set_residual_bytes(::google::protobuf::int64 value) {
  
  residual_bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.residual_bytes)
}

// optional int64 output_bytes = 10;
inline void ExecProfile::clear_output_bytes() {
  output_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::output_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.output_bytes)
  return output_bytes_;
}
inline void ExecProfile::set_output_bytes(::google::protobuf::int64 value) {
  
  output_bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.output_bytes)
}

// optional int64 host_temp_bytes = 11;
inline void ExecProfile::clear_host_temp_bytes() {
  host_temp_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::host_temp_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.host_temp_bytes)
  return host_temp_bytes_;
}
inline void ExecProfile::set_host_temp_bytes(::google::protobuf::int64 value) {
  
  host_temp_bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.host_temp_bytes)
}

// optional int64 host_persistent_bytes = 12;
inline void ExecProfile::clear_host_persistent_bytes() {
  host_persistent_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::host_persistent_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.host_persistent_bytes)
  return host_persistent_bytes_;
}
inline void ExecProfile::set_host_persistent_bytes(::google::protobuf::int64 value) {
  
  host_persistent_bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.host_persistent_bytes)
}

// optional int64 accelerator_temp_bytes = 13;
inline void ExecProfile::clear_accelerator_temp_bytes() {
  accelerator_temp_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::accelerator_temp_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.accelerator_temp_bytes)
  return accelerator_temp_bytes_;
}
inline void ExecProfile::set_accelerator_temp_bytes(::google::protobuf::int64 value) {
  
  accelerator_temp_bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.accelerator_temp_bytes)
}

// optional int64 accelerator_persistent_bytes = 14;
inline void ExecProfile::clear_accelerator_persistent_bytes() {
  accelerator_persistent_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::accelerator_persistent_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.accelerator_persistent_bytes)
  return accelerator_persistent_bytes_;
}
inline void ExecProfile::set_accelerator_persistent_bytes(::google::protobuf::int64 value) {
  
  accelerator_persistent_bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.accelerator_persistent_bytes)
}

// optional int64 allocator_bytes_in_use = 15;
inline void ExecProfile::clear_allocator_bytes_in_use() {
  allocator_bytes_in_use_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecProfile::allocator_bytes_in_use() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.allocator_bytes_in_use)
  return allocator_bytes_in_use_;
}
inline void ExecProfile::set_allocator_bytes_in_use(::google::protobuf::int64 value) {
  
  allocator_bytes_in_use_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.allocator_bytes_in_use)
}

// optional bool memory_intialized = 16;
inline void ExecProfile::clear_memory_intialized() {
  memory_intialized_ = false;
}
inline bool ExecProfile::memory_intialized() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecProfile.memory_intialized)
  return memory_intialized_;
}
inline void ExecProfile::set_memory_intialized(bool value) {
  
  memory_intialized_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.ExecProfile.memory_intialized)
}

inline const ExecProfile* ExecProfile::internal_default_instance() {
  return &ExecProfile_default_instance_.get();
}
// -------------------------------------------------------------------

// ExecTime

// repeated .tensorflow.tfprof.Tuple times = 1;
inline int ExecTime::times_size() const {
  return times_.size();
}
inline void ExecTime::clear_times() {
  times_.Clear();
}
inline const ::tensorflow::tfprof::Tuple& ExecTime::times(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.ExecTime.times)
  return times_.Get(index);
}
inline ::tensorflow::tfprof::Tuple* ExecTime::mutable_times(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.ExecTime.times)
  return times_.Mutable(index);
}
inline ::tensorflow::tfprof::Tuple* ExecTime::add_times() {
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.ExecTime.times)
  return times_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::Tuple >*
ExecTime::mutable_times() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.ExecTime.times)
  return &times_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::Tuple >&
ExecTime::times() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.ExecTime.times)
  return times_;
}

inline const ExecTime* ExecTime::internal_default_instance() {
  return &ExecTime_default_instance_.get();
}
// -------------------------------------------------------------------

// Tuple

// repeated int64 int64_values = 1;
inline int Tuple::int64_values_size() const {
  return int64_values_.size();
}
inline void Tuple::clear_int64_values() {
  int64_values_.Clear();
}
inline ::google::protobuf::int64 Tuple::int64_values(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.Tuple.int64_values)
  return int64_values_.Get(index);
}
inline void Tuple::set_int64_values(int index, ::google::protobuf::int64 value) {
  int64_values_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.Tuple.int64_values)
}
inline void Tuple::add_int64_values(::google::protobuf::int64 value) {
  int64_values_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.Tuple.int64_values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Tuple::int64_values() const {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.Tuple.int64_values)
  return int64_values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Tuple::mutable_int64_values() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.Tuple.int64_values)
  return &int64_values_;
}

inline const Tuple* Tuple::internal_default_instance() {
  return &Tuple_default_instance_.get();
}
// -------------------------------------------------------------------

// Memory

// optional int64 bytes = 1;
inline void Memory::clear_bytes() {
  bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Memory::bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.Memory.bytes)
  return bytes_;
}
inline void Memory::set_bytes(::google::protobuf::int64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.Memory.bytes)
}

// optional uint64 ptr = 2;
inline void Memory::clear_ptr() {
  ptr_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Memory::ptr() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.Memory.ptr)
  return ptr_;
}
inline void Memory::set_ptr(::google::protobuf::uint64 value) {
  
  ptr_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.Memory.ptr)
}

inline const Memory* Memory::internal_default_instance() {
  return &Memory_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tfprof
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fcore_2fprofiler_2ftfprof_5flog_2eproto__INCLUDED
